package com.liufr.leetcode._codeleet;

/**
 * @author lfr
 * @date 2020/7/24 14:12
 *
 * 1025. 除数博弈
 *
 * 爱丽丝和鲍勃一起玩游戏，他们轮流行动。爱丽丝先手开局。
 *
 * 最初，黑板上有一个数字 N 。在每个玩家的回合，玩家需要执行以下操作：
 *
 * 选出任一 x，满足 0 < x < N 且 N % x == 0 。
 * 用 N - x 替换黑板上的数字 N 。
 * 如果玩家无法执行这些操作，就会输掉游戏。
 *
 * 只有在爱丽丝在游戏中取得胜利时才返回 True，否则返回 false。假设两个玩家都以最佳状态参与游戏。
 *
 * 解题思路：
 * 其实这道题严格来讲不是一道编程题，而是一道逻辑题；
 * 既然是最佳状态，那我们几乎可以认定结果是符合一定规律的，我们来看看怎样才能赢；
 * 首先，谁拿到了2，谁就赢了（拿到2之后选1，另外一个人就没法选了）；
 * 其次，如果拿到了偶数，也是肯定能赢（选1后，对面只能是奇数，然后不论对面怎么选，回到alice这边的肯定是偶数，最后2肯定在alice这边）
 * 当然，谁要是拿到了奇数，那就必输了。
 */
public class _1025_divisorGame {
    public boolean divisorGame(int N) {
        return N % 2 == 0;
    }
}
